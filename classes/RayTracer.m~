classdef RayTracer < handle
    properties
        % constants
        IOR_air=1.00029;
        IOR_water=1.3333;
        IOR_glass=1.517;
        correction_factor=[];
        
        %%% Optical elements
        nObjects=0;
        Objects={};
        
        %%% Rays
        nRays=0;
        nB
        Bundle=struct;
        Rays=struct;
    end
    
    methods
        function self=RayTracer(varargin)
            %disp('<RayTracer by Ben Vermaercke, 2015>')
            
            self.correction_factor=(self.IOR_glass-self.IOR_air)/self.IOR_air*2;
        end
        
        %%% Optical elements
        function add_lens(varargin)
            self=varargin{1};
            
            self.nObjects=self.nObjects+1;
            self.Objects{self.nObjects}=Lens(varargin{2:end});
        end
        
        function add_mirror(varargin)
            self=varargin{1};
            
            self.nObjects=self.nObjects+1;
            self.Objects{self.nObjects}=Mirror(varargin{2:end});
        end
        
        function add_absorber(varargin)
            self=varargin{1};
            
            self.nObjects=self.nObjects+1;
            self.Objects{self.nObjects}=Absorber(varargin{2:end});
        end
        
        function add_bundle(varargin)
           self.nRays 
        end
        
        function draw_space(varargin)
            self=varargin{1};
            
            x_range=[-50 200];
            y_range=[-50 50];
            
            clf
            hold on
            plot(x_range,[0 0],'k--')
            %plot([-100 -100],y_range,'k--')
            %plot(x_range,[0 0],'k--')
            %plot([0 0],[-50 50],'k--')
            
            %%% Show optical elements            
            for iObject=1:self.nObjects                
                plot(self.Objects{iObject}.XV,self.Objects{iObject}.YV,self.Objects{iObject}.line_style)
            end
            
            %%% Init Rays
            for iRay=1:self.nRays
                self.Rays.p(iRay)=plot(x_range(1),y_range(1),'r-','markerSize',2);
            end
            self.Rays.chief=plot(x_range(1),y_range(1),'b-','lineWidth',2);
            
            axis([x_range y_range])
            axis equal
            drawnow
        end
        
    end
end